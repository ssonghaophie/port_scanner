import socket
from scapy import *
from datetime import datetime

# specify the target IP address
target_IP = "131.229.72.13"

# record start time
start_time=str(datetime.now())
print("Start port scan at:" + str(datetime.now()))

# create a loop to iterate through all ports
for i in range(1023):
    # create a socket object
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    # set a timeout in case the port is not open
    sock.settimeout(1)
    # attempt to connect to the port
    result = sock.connect_ex((target_IP, i))
    # if the port is open, print a message
    if result == 0:
        print(f"Port {i} is open")
    # close the socket
    sock.close()

# record end time
end_time=str(datetime.now())
print("scan done! in" + start_time-end_time)

# TCP Fin Scanning for a single port
def fin_scan(target_IP,port):
    # define randoom source port
    src_port = random.randint(1025,65534)
    # Send Fin to a destination port
    fin_resp = sr1(
        IP(dst=target_IP)/TCP(sport=src_port,dport=port,flags="F"),timeout=1,
        verbose=0,
    )
    # Port is open when no response
    if (fin_resp is None):
        return True
    # Port is closed when response has an RST flag in the TCP
    elif fin_resp.haslayer(TCP) and fin_resp.getlayer(TCP).flags == 0x14:
        return False
    # Port is filtered when reponse has a type 3 ICMP packet with code [1,2,3,9,10,13]
    elif(fin_scan_resp.haslayer(ICMP)):
        if(int(fin_scan_resp.getlayer(ICMP).type)==3 and int(fin_scan_resp.getlayer(ICMP).code) in [1,2,3,9,10,13]):
            return "filtered"
    
        

